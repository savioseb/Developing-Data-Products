hilbert <- function(n) { i<-1:n                         1/outer(i-1,i,"+”)}
hilbert <- function(n) { i<-1:n  1/outer(i-1,i,"+”)}
hilbert <- function(n) {
i<-1:n
1/outer(i-1,i,"+”)
}
}
q
df
}q
q
hilbert <- function(n) {
i<-1:n
1/outer(i-1,i,"+”)
}
q
q()
hilbert <- function(n) {
i <- 1:n
1 / outer(i - 1, i, "+”)
}
x <- hilbert(1000)
system.time(svd(x))
exit
setwd( "/Users/saviosebastian/Documents/R/3 - Project")
source('~/Documents/R/3 - Project/run_analyis.R')
dsExtract[ , activityLabelColumnNumber ]
dsExtract[ , 87 ]
head( dsExtract[ , 87 ] )
rm( list=ls())
source('~/Documents/R/3 - Project/run_analyis.R')
head( dsExtract[ , activityLabelColumnNumber ] )
head( dsExtract[ , a87 ] )
head( dsExtract[ , 87 ] )
head( dsExtract[1:5 , 87 ] )
dsExtract[1:5 , 87 ]
message( head( dsExtract[1:5 , 87 ] ) )
?write.table
message( head( dsExtract[1:5 , 87 ] ) )
source('~/Documents/R/3 - Project/run_analyis.R')
source('~/Documents/R/3 - Project/run_analyis.R')
warnings()
source('~/Documents/R/3 - Project/run_analyis.R')
source('~/Documents/R/3 - Project/run_analyis.R')
printingDS
?aggregate
rm( list = ls())
rm( list = ls())Merge training and test sets
Test and training data (X_train.txt, X_test.txt), subject ids (subject_train.txt, subject_test.txt) and activity ids (y_train.txt, y_test.txt) are merged to obtain a single data set. Variables are labelled with the names assigned by original collectors (features.txt).
cat('014')
cat('/014')
cat('\014')
setwd('../4 - Project')
setwd('../4 - Project')
geted()
getwd()
setwd( "/Users/saviosebastian/Documents/R/4 - Project")
getwd()
dir()
setwd('exdata-data-NEI_data')
dir()
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot1.R')
?plot
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot1.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot1-x.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot1-x.R')
head(neiData)
head(sccData)
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot1-x.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot1-x.R')
rm( list=ls())
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot1-x.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/Untitled.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/Untitled.R')
str( neiData$type )
summary( neiData$type )
neiData$type[neiData$type=='ON-ROAD']
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot3.R')
View(neiData)
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot3.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot3.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot3.R')
library(ggplot2)
?ggplot
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot3.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot3.R')
rm( list=ls())
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot3.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot3.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot32.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot32.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot32.R')
View(NEI)
SCC <- readRDS("Source_Classification_Code.rds")
head(SCC)
str( SCC)
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot4.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot4.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot42.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot42.R')
str( NEI)
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot43.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot43.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot42.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot42.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/Untitled.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/Untitled.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot6.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot6.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot6.R')
source('~/Documents/R/4 - Project/exdata-data-NEI_data/plot6.R')
getwd()
setwd( '../../05 - Project 2' )
cat( '/014')
cat( '\014')
bunzip2
getwd()
?bunzip2
p = "fd"
eval(P)
parse(p)
eval( p)
p <- "R.utils"
library(p)
library( eval(p ) )
library( eval(p )[1] )
?bzfile
library( p , character.only = T)
install.packages( paste0( "\"" , p , "\"" )
)
?download.file
?read.csv
rm( list=ls())
rawdata <- read.csv( bzfile( "repdata-data-StormData.csv.bz2" ) )
rawdata[ , rawdata$EVTYPE]
class( rawdata)
rawdata[ , rawdata$EVTYPE ]
rawdata[ , 1]
head( rawdata )
rawdata$EVTYPE
a <-rawdata( , 1)
a <-rawdata[] , 1]
a <-rawdata[ , 1]
rm( a)
a <-rawdata[ , 1:2]
rm(a)
colsRequired <- c( rawdata$EVTYPE , rawdata$FATALITIES )
a <- rawdata[ , colsRequired ]
colsRequired <- c( EVTYPE , FATALITIES )
colsRequired <- c( "EVTYPE" , "FATALITIES" )
a <- rawdata[ , colsRequired ]
rm(a)
columnsRequired <- c( "EVTYPE" , "FATALITIES" , "INJURIES" , "PROPDMG" , "PROPDMGEXP" , "CROPDMG" , "CROPDMGEXP")
rm( colsRequired)
columnsRequired
dsAnalysis <- rawdata( , columnsRequired )
dsAnalysis <- rawdata[] , columnsRequired ]
dsAnalysis <- rawdata[ , columnsRequired ]
head(dsAnalysis)
columnName = "PROPDMGEXP"
dsAnalysis$eval(columnName)
dsAnalysis$PROPDMGEXP
dsAnalysis$columnName
dsAnalysis[,columnName]
dsAnalysis[,columnName] == "K"
charMag <- ( 'K' , 'k' , 'M' , 'm' , 'B' , 'b' )
charMag <- c( 'K' , 'k' , 'M' , 'm' , 'B' , 'b' )
intMag <- c( 3L , 3L , 6L , 6L , 9L , 9L )
charMag[1]
convertLetterExpToIntegers <- function() {
for( columnName in columnNames ) {
for( i in 1:6 ) {
dsAnalysis[ , ( dsAnalysis$[ , columnName ] == charMag[i] ] <- intMag[i]
}
}
}
convertLetterExpToIntegers <- function() {
for( columnName in columnNames ) {
for( i in 1:6 ) {
dsAnalysis[ , dsAnalysis$[ , columnName ] == charMag[i] ] <- intMag[i]
}
}
}
dsAnalysis[(dsAnalysis$PROPDMGEXP == "K" | dsAnalysis$PROPDMGEXP == "k"), ]$PROPDMGEXP <- 3
dsAnalysis[(dsAnalysis$PROPDMGEXP == "M" | dsAnalysis$PROPDMGEXP == "m"), ]$PROPDMGEXP <- 6
dsAnalysis[(dsAnalysis$PROPDMGEXP == "B" | dsAnalysis$PROPDMGEXP == "b"), ]$PROPDMGEXP <- 9
dsAnalysis[(dsAnalysis$CROPDMGEXP == "K" | dsAnalysis$CROPDMGEXP == "k"), ]$CROPDMGEXP <- 3
dsAnalysis[(dsAnalysis$CROPDMGEXP == "M" | dsAnalysis$CROPDMGEXP == "m"), ]$CROPDMGEXP <- 6
dsAnalysis[(dsAnalysis$CROPDMGEXP == "B" | dsAnalysis$CROPDMGEXP == "b"), ]$CROPDMGEXP <- 9
dsAnalysis <- rawdata[ , columnsRequired ]
dsAnalysis$PROPDMGEXP <- as.character(dsAnalysis$PROPDMGEXP)
dsAnalysis$PROPDMGEXP[dsAnalysis$PROPDMGEXP == "" | dsAnalysis$PROPDMGEXP == "+" | dsAnalysis$PROPDMGEXP == "?" | dsAnalysis$PROPDMGEXP == "-"] <- "1"
dsAnalysis$PROPDMGEXP[dsAnalysis$PROPDMGEXP == "H" | dsAnalysis$PROPDMGEXP == "h"] <- "100"
dsAnalysis$PROPDMGEXP[dsAnalysis$PROPDMGEXP == "K" | dsAnalysis$PROPDMGEXP == "k"] <- "1000"
dsAnalysis$PROPDMGEXP[dsAnalysis$PROPDMGEXP == "M" | dsAnalysis$PROPDMGEXP == "m"] <- "1000000"
dsAnalysis$PROPDMGEXP[dsAnalysis$PROPDMGEXP == "B" | dsAnalysis$PROPDMGEXP == "b"] <- "1000000000"
dsAnalysis$PROPDMGEXP <- as.numeric(dsAnalysis$PROPDMGEXP)
dsAnalysis$PROPERTY_DAMAGE <- dsAnalysis$PROPDMG * dsAnalysis$PROPDMGEXP
dsAnalysis$PROPDMGEXP <- as.character(dsAnalysis$PROPDMGEXP)
dsAnalysis$PROPDMGEXP[dsAnalysis$PROPDMGEXP == "" | dsAnalysis$PROPDMGEXP == "+" | dsAnalysis$PROPDMGEXP == "?" | dsAnalysis$PROPDMGEXP == "-"] <- "1"
dsAnalysis$PROPDMGEXP[dsAnalysis$PROPDMGEXP == "H" | dsAnalysis$PROPDMGEXP == "h"] <- "100"
dsAnalysis$PROPDMGEXP[dsAnalysis$PROPDMGEXP == "K" | dsAnalysis$PROPDMGEXP == "k"] <- "1000"
dsAnalysis$PROPDMGEXP[dsAnalysis$PROPDMGEXP == "M" | dsAnalysis$PROPDMGEXP == "m"] <- "1000000"
dsAnalysis$PROPDMGEXP[dsAnalysis$PROPDMGEXP == "B" | dsAnalysis$PROPDMGEXP == "b"] <- "1000000000"
dsAnalysis$PROPDMGEXP <- as.numeric(dsAnalysis$PROPDMGEXP)
dsAnalysis$PROPERTY_DAMAGE <- dsAnalysis$PROPDMG * dsAnalysis$PROPDMGEXP
dsAnalysis$CROPDMGEXP <- as.character(dsAnalysis$CROPDMGEXP)
dsAnalysis$CROPDMGEXP[dsAnalysis$CROPDMGEXP == "" | dsAnalysis$CROPDMGEXP == "?"] <- "1"
dsAnalysis$CROPDMGEXP[dsAnalysis$CROPDMGEXP == "B" | dsAnalysis$CROPDMGEXP == "b"] <- "1000000000"
dsAnalysis$CROPDMGEXP[dsAnalysis$CROPDMGEXP == "M" | dsAnalysis$CROPDMGEXP == "m"] <- "1000000"
dsAnalysis$CROPDMGEXP[dsAnalysis$CROPDMGEXP == "K" | dsAnalysis$CROPDMGEXP == "k"] <- "1000"
dsAnalysis$CROPDMGEXP[dsAnalysis$CROPDMGEXP == "" | dsAnalysis$CROPDMGEXP == "?"] <- "1"
dsAnalysis$CROPDMGEXP <- as.numeric(dsAnalysis$CROPDMGEXP)
dsAnalysis$CROP_DAMAGE <- dsAnalysis$CROPDMG * dsAnalysis$CROPDMGEXP
ddply
library(dplyr)
library("plyr")
install.packages( "plyr")
install.packages( "plyr")
library('plyr')
rm( charMag)
rm( columnName)
rm( intMag)
a<-ddply(dsAnalysis,.(EVTYPE),summarize,Injuries=sum(INJURIES))
class(a)
rm(a)
dsInjuries<-ddply(dsAnalysis,.(EVTYPE),summarize,Injuries=sum(INJURIES))
a1<-arrange(dsInjuries,desc(Injuries))
head(a1)
rm(a1)
dsInjuriesDesc<-arrange(dsInjuries,desc(Injuries))
head(dsInjuries)
head(dsInjuriesDesc)
head(dsInjuriesDesc, 10)
packageName = "ggplot2"
( require( packageName ) )
( require( packageName , character.only = T ) )
top10<-dsInjuriesDesc[1:10,]
top10
ggplot(
data = dsInjuriesDesc,
aes( EVTYPE , Injuries , fill = Injuries ) ) +
geom_bar( stat = "identity" ) +
xlab( "Event" ) + ylab( "Injuries" ) +
ggtitle( "Injuries caused by Events (Top 10)") +
theme(legend.position = "none") +
coord_flip()
?geom_bar
library("gridExtra")
install.packages("gridExtra")
library("gridExtra")
dsInjuriesDesc[10,]
dsInjuriesDesc[1:10,]
dsEconomic <- ddply( dsAnalysis, .(EVTYPE) , summarize , PropertyDamages = sum(PROPERTY_DAMAGE) , CropDamages=sum(CROP_DAMAGE))
dsTotalDamages <- mutate( c , ( TotalDamages = PropertyDamages + CropDamages ) ,TotalDamagesByM = TotalDamages/1000000)
dsTotalDamagesDesc <- arrange( dsTotalDamages , desc( TotalDamagesByM ) )
head( dsTotalDamagesDesc , 10 )
dsTotalDamages <- mutate( dsEconomic , ( TotalDamages = PropertyDamages + CropDamages ) ,TotalDamagesByM = TotalDamages/1000000)
dsTotalDamagesDesc <- arrange( dsTotalDamages , desc( TotalDamagesByM ) )
head( dsTotalDamagesDesc , 10 )
dsTotalDamages <- mutate( dsEconomic , ( TotalDamages = PropertyDamages + CropDamages ) ,TotalDamagesByM = TotalDamages/1000000)
dsTotalDamagesDesc <- arrange( dsTotalDamages , desc( TotalDamagesByM ) )
head( dsTotalDamagesDesc , 10 )
dsTotalDamages <- mutate( dsEconomic , ( TotalDamages = PropertyDamages + CropDamages ) )
dsTotalDamages <- mutate( dsTotalDamages , TotalDamagesByM = TotalDamages/1000000)
dsTotalDamages
dsTotalDamages <- mutate( dsEconomic , TotalDamages = PropertyDamages + CropDamages )
dsTotalDamages
dsTotalDamages <- mutate( dsEconomic , TotalDamages = PropertyDamages + CropDamages , TotalDamagesByM = TotalDamages/1000000)
dsTotalDamages
dsTotalDamagesDesc <- arrange( dsTotalDamages , desc( TotalDamagesByM ) )
head( dsTotalDamagesDesc , 10 )
``
dsTotalDamages[,c(1:5)]
dsTotalDamages[ , c(1,5) ]
setwd( "../06 - Statistical Inference - Course Project 1")
setwd( "../07 - Project")
rm( list = ls())
data(mtcars)
dataMCars <- data(mtcars)
mtcars
dim( mtcars)
str(mtcars)
summary(mtcars)
mtcars
?plot
?ggplot
install.packages( "shiny")
library(shiny)
setwd( '../09 - shiny project')
cat('\014')
runapp
runApp()
install.packages( 'rCharts')
library( 'rCharts')
library( 'rCharts')
runApp()
install.packages( 'rCharts')
runApp()
